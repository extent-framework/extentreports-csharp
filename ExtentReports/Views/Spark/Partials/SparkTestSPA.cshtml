@using AventStack.ExtentReports
@using AventStack.ExtentReports.Model
@using AventStack.ExtentReports.Reporter.Model
@using System
@using RazorEngine
@using RazorEngine.Templating

@{
    var isbdd = Model.Report.IsBDD;
    var testList = Model.Report.Tests;
}

<div class="test-wrapper row view test-view">
  <div class="test-list">
    <div class="test-list-tools">
      <ul class="tools pull-left">
        <li><a href="#"><span class="font-size-14">Tests</span></a></li>
      </ul>
      <ul class="tools text-right">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-exclamation-circle"></i></a>
          <ul id="status-toggle" class="dropdown-menu dropdown-md p-v-0">
            @if (Model.Report.AnyTestHasStatus(Status.Pass)) { <a class="dropdown-item" status="pass" href="#"><span>Pass</span><span class="status success"></span></a> }
            @if (Model.Report.AnyTestHasStatus(Status.Fail)) { <a class="dropdown-item" status="fail" href="#"><span>Fail</span><span class="status danger"></span></a> }
            @if (Model.Report.AnyTestHasStatus(Status.Warning)) { <a class="dropdown-item" status="warning" href="#"><span>Warning</span><span class="status warning"></span></a> }
            @if (Model.Report.AnyTestHasStatus(Status.Skip)) { <a class="dropdown-item" status="skip" href="#"><span>Skip</span><span class="status warning"></span></a> }
            <div class="dropdown-divider"></div>
            <a status="clear" class="dropdown-item" href="#"><span>Clear</span><span class="pull-right"><i class="fa fa-close"></i></span></a>
          </ul>
        </li>
        @if (Model.Report.AuthorCtx.HasItems)
        {
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user"></i></a>
          <ul id="author-toggle" class="dropdown-menu dropdown-md p-v-0">
            @foreach (var ctx in Model.Report.AuthorCtx.Context) { <a class="dropdown-item" href="#">@ctx.Value.Attr.Name</a> }
          </ul>
        </li>
        }
        @if (Model.Report.CategoryCtx.HasItems)
        {
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-tag"></i></a>
          <ul id="tag-toggle" class="dropdown-menu dropdown-md p-v-0">
            @foreach (var ctx in Model.Report.CategoryCtx.Context) { <a class="dropdown-item" href="#">@ctx.Value.Attr.Name</a> }
          </ul>
        </li>
        }
        @if (Model.Report.DeviceCtx.HasItems)
        {
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-tablet"></i></a>
          <ul id="device-toggle" class="dropdown-menu dropdown-md p-v-0">
            @foreach (var ctx in Model.Report.DeviceCtx.Context) { <a class="dropdown-item" href="#">@ctx.Value.Attr.Name</a> }
          </ul>
        </li>
        }
      </ul>
    </div>
    <div class="test-list-wrapper scrollable">
      <ul class="test-list-item">
        @foreach (var test in testList)
        {
        var reporterTest = new SparkReporterTest(Model, test);
        var timeTaken = Math.Round(test.TimeTaken, 2);
        var status = test.Status.ToString().ToLower();
        var authors = ""; var tags = ""; var devices = "";
        foreach (var x in test.Author) { authors += x.Name + " "; }
        foreach (var x in test.Category) { tags += x.Name + " "; }
        foreach (var x in test.Device) { devices += x.Name + " "; }
        <li class="test-item" status="@status" test-id="@test.Id"
          author="@authors"
          tag="@tags"
          device="@devices">
          <div class="test-detail">
            <p class="name">@test.Name</p>
            <p class="text-sm">
              <span>@test.StartTime.ToString(Model.Config.TimeStampFormat)</span> / <span>@timeTaken ms</span>
              <span class="badge @status-bg log float-right">@test.Status</span>
            </p>
          </div>
          <div class="test-contents d-none">
            <div class="detail-head">
              <div class="p-v-10">
                <div class="info">
                  <h5 class="test-status text-@status">@test.Name</h5>
                  <span class='badge badge-success'>@test.StartTime.ToString(Model.Config.TimeStampFormat)</span>
                  <span class='badge badge-danger'>@test.EndTime.ToString(Model.Config.TimeStampFormat)</span>
                  <span class='badge badge-default'>@timeTaken ms</span>
                  &middot; <span class='uri-anchor badge badge-default'>#test-id=@test.Id</span>
                  <span title='Skip to the next failed step' class='badge badge-danger pointer float-right ne ml-1'><i class="fa fa-fast-forward"></i></span>
                  <span title='Collapse all nodes' class='badge badge-default pointer float-right ct ml-1'><i class="fa fa-compress"></i></span>
                  <span title='Expand all nodes' class='badge badge-default pointer float-right et'><i class="fa fa-expand"></i></span>
                </div>
                @if (test.HasAttributes) { <div class="m-t-15">@Include("Attributes", test)</div> }
                @if (!string.IsNullOrEmpty(test.Description)) { <div class="m-t-10 m-l-5">@test.Description</div> }
              </div>
            </div>
            @if (isbdd) { @Include("SparkBDD", reporterTest) } else { @Include("SparkStandard", reporterTest) }
          </div>
        </li>
        }
      </ul>
    </div>
  </div>
  <div class="test-content scrollable">
    <div class="test-content-tools">
      <ul><li><a class="back-to-test" href="#"><i class="fa fa-arrow-left"></i></a></li></ul>
    </div>
    <div class="test-content-detail"><div class="detail-body"></div></div>
  </div>
</div>
